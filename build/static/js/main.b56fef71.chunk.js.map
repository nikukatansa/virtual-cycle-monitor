{"version":3,"sources":["firebase.js","App.js","index.js"],"names":["firebase","apps","length","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","stat_doc","firestore","collection","initial_load","DefaultIcon","L","icon","iconUrl","iconSize","iconAnchor","Marker","prototype","options","full_route","features","geometry","coordinates","cyclingEastIcon","Icon","iconRetinaUrl","cyclingWestIcon","degreesToRadians","degrees","Math","PI","radiansToDegrees","radians","intermediatePoint","lat1","long1","lat2","long2","f","d","asin","sqrt","pow","sin","cos","A","B","x","y","z","lat","atan2","long","calculateDist","dLat","dLong","a","useState","base_data","getGeoJSON","dist_data","total_dist","push","i","createRoute","route","setLat","setLong","dist","setDist","tick","setTick","curStage","setCurStage","legDirection","setLegDirection","startTick","setStartTick","speed","setSpeed","active","setActive","stgs","prev_dist","waypoints","parseInt","leg","stage_d","total_d","stage_t","populateStages","stages","setStages","summaryMapRef","useRef","callback","delay","savedCallback","useEffect","current","id","setInterval","clearInterval","useInterval","new_dist","new_tick","findIndex","element","leg_dist","new_point","new_stages","slice","nextWalkFrame","document","getElementsByClassName","scrollIntoView","window","addEventListener","formatDistAsMetres","metres","toLocaleString","onSnapshot","snapshot","size","cur_data","docs","data","Timestamp","fromDate","Date","timestamp","start_tick","cur_stage","map","stage","index","stage_times","console","log","Map","center","zoom","dragging","keyboard","scrollWheelZoom","zoomControl","doubleClickZoom","onmoveend","event","leafletElement","setView","target","getCenter","bind","TileLayer","url","attribution","GeoJSON","style","styleRoute","position","ref","Circle","radius","className","full_dist","toFixed","seconds","hours","floor","hour_rem","mins","secs","toString","padStart","formatTime","href","textAlign","class_n","stage_r","key","location","formatShortTime","color","type","properties","name","description","styleUrl","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.b56fef71.chunk.js","sourcesContent":["import firebase from 'firebase/app'\r\n\r\nexport default () => {\r\n  if (!firebase.apps.length) {\r\n    firebase.initializeApp({\r\n      apiKey: \"AIzaSyDL8a9C5nB9GnlYI0DB22hWqclSNWG5wbg\",\r\n      authDomain: \"virtual-cycle.firebaseapp.com\",\r\n      projectId: \"virtual-cycle\",\r\n      storageBucket: \"virtual-cycle.appspot.com\",\r\n      messagingSenderId: \"370679069938\",\r\n      appId: \"1:370679069938:web:988efa993793b4dc1c246b\"\r\n    })\r\n  }\r\n}\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { Map, GeoJSON, TileLayer, Circle, Marker } from 'react-leaflet'\r\nimport './App.css'\r\nimport { waypoints } from './route.json'\r\nimport {\r\n  features,\r\n  route,\r\n  full_dist\r\n} from './Fonseca_Bluefields_out.json'\r\n\r\n\r\nimport L from 'leaflet'\r\n\r\n// Firebase configuration\r\nimport initFirebase from './firebase'\r\nimport firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\ninitFirebase()\r\nconst db = firebase.firestore()\r\nconst stat_doc = db.collection('cycle-updates')\r\n\r\nlet initial_load = true\r\n\r\nlet DefaultIcon = L.icon({\r\n  iconUrl: './icons8-image-48.png',\r\n  iconSize: [32, 32],\r\n  iconAnchor: [16, 26]\r\n})\r\n\r\nL.Marker.prototype.options.icon = DefaultIcon\r\n\r\n// Save full route for later partitioning\r\nconst full_route = features[0].geometry.coordinates\r\n\r\nfunction useInterval(callback, delay) {\r\n  const savedCallback = useRef()\r\n\r\n  // Remember the latest callback.\r\n  useEffect(() => {\r\n    savedCallback.current = callback\r\n  }, [callback])\r\n\r\n  // Set up the interval.\r\n  useEffect(() => {\r\n    function tick() {\r\n      savedCallback.current()\r\n    }\r\n    if (delay !== null) {\r\n      let id = setInterval(tick, delay)\r\n      return () => clearInterval(id)\r\n    }\r\n  }, [delay])\r\n}\r\n\r\nexport default () => {\r\n  const cyclingEastIcon = new L.Icon({\r\n    iconUrl: './icons8-man-biking-80.png',\r\n    iconRetinaUrl: './icons8-man-biking-80.png',\r\n    iconAnchor: [66, 80],\r\n    iconSize: [80, 80]\r\n  })\r\n\r\n  const cyclingWestIcon = new L.Icon({\r\n    iconUrl: './icons8-man-biking-80-reverse.png',\r\n    iconRetinaUrl: './icons8-man-biking-80-reverse.png',\r\n    iconAnchor: [14, 80],\r\n    iconSize: [80, 80]\r\n  })\r\n\r\n  const degreesToRadians = (degrees) => {\r\n    return (degrees * Math.PI) / 180\r\n  }\r\n\r\n  const radiansToDegrees = (radians) => {\r\n    return (radians * 180) / Math.PI\r\n  }\r\n\r\n  const intermediatePoint = (lat1, long1, lat2, long2, f) => {\r\n    // http://fraserchapman.blogspot.com/2008/09/intermediate-points-on-great-circle.html\r\n    lat1 = degreesToRadians(lat1)\r\n    long1 = degreesToRadians(long1)\r\n    lat2 = degreesToRadians(lat2)\r\n    long2 = degreesToRadians(long2)\r\n    const d =\r\n      2 *\r\n      Math.asin(\r\n        Math.sqrt(\r\n          Math.pow(Math.sin((lat1 - lat2) / 2), 2) +\r\n            Math.cos(lat1) *\r\n              Math.cos(lat2) *\r\n              Math.pow(Math.sin((long1 - long2) / 2), 2)\r\n        )\r\n      )\r\n    const A = Math.sin((1 - f) * d) / Math.sin(d)\r\n    const B = Math.sin(f * d) / Math.sin(d)\r\n    const x =\r\n      A * Math.cos(lat1) * Math.cos(long1) +\r\n      B * Math.cos(lat2) * Math.cos(long2)\r\n    const y =\r\n      A * Math.cos(lat1) * Math.sin(long1) +\r\n      B * Math.cos(lat2) * Math.sin(long2)\r\n    const z = A * Math.sin(lat1) + B * Math.sin(lat2)\r\n    const lat = Math.atan2(z, Math.sqrt(Math.pow(x, 2) + Math.pow(y, 2)))\r\n    const long = Math.atan2(y, x)\r\n\r\n    return [radiansToDegrees(lat), radiansToDegrees(long)]\r\n  }\r\n\r\n  const calculateDist = (long1, lat1, long2, lat2) => {\r\n    // https://stackoverflow.com/questions/365826/calculate-distance-between-2-gps-coordinates\r\n    let earthRadiusM = 6371e3\r\n    let dLat = degreesToRadians(lat2 - lat1)\r\n    let dLong = degreesToRadians(long2 - long1)\r\n    lat1 = degreesToRadians(lat1)\r\n    lat2 = degreesToRadians(lat2)\r\n    let a =\r\n      Math.sin(dLat / 2) * Math.sin(dLat / 2) +\r\n      Math.sin(dLong / 2) *\r\n        Math.sin(dLong / 2) *\r\n        Math.cos(lat1) *\r\n        Math.cos(lat2)\r\n    let c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a))\r\n    return earthRadiusM * c\r\n  }\r\n\r\n  const createRoute = () => {\r\n    const base_data = getGeoJSON().features[0].geometry.coordinates\r\n    let dist_data = []\r\n    let total_dist = 0\r\n    let seg_dist = 0\r\n    dist_data.push([base_data[0][0], base_data[0][1], 0])\r\n    for (let i = 1; i < base_data.length; i++) {\r\n      seg_dist = calculateDist(\r\n        base_data[i - 1][0],\r\n        base_data[i - 1][1],\r\n        base_data[i][0],\r\n        base_data[i][1]\r\n      )\r\n      total_dist += seg_dist\r\n      dist_data.push([base_data[i][0], base_data[i][1], total_dist])\r\n    }\r\n    return dist_data\r\n  }\r\n\r\n  const populateStages = () => {\r\n    let stgs = []\r\n    let prev_dist = 0\r\n    for (let i = 0; i < waypoints.length; i++) {\r\n      let dist = parseInt(route[waypoints[i].leg][2])\r\n      stgs.push({\r\n        ...waypoints[i],\r\n        stage_d: dist - prev_dist,\r\n        total_d: dist,\r\n        stage_t: 0\r\n      })\r\n      prev_dist = dist\r\n    }\r\n    return stgs\r\n  }\r\n\r\n  // eslint-disable-next-line\r\n  const [route, setRoute] = useState(() => createRoute())\r\n  const [lat, setLat] = useState(route[0][1])\r\n  const [long, setLong] = useState(route[0][0])\r\n  const [dist, setDist] = useState(0)\r\n  const [tick, setTick] = useState(0)\r\n  const [curStage, setCurStage] = useState(0)\r\n  const [legDirection, setLegDirection] = useState('east')\r\n  const [startTick, setStartTick] = useState(0)\r\n  const [speed, setSpeed] = useState(0)\r\n  const [active, setActive] = useState(false)\r\n  const [stages, setStages] = useState(populateStages())\r\n  const summaryMapRef = useRef(null)\r\n\r\n  const nextWalkFrame = () => {\r\n    const new_dist = dist + (speed * 1000) / 3600 // Assumes 1 fps\r\n    const new_tick = tick + 1\r\n    setDist(new_dist)\r\n    setTick(new_tick)\r\n    const leg = route.findIndex((element) => element[2] > new_dist) - 1\r\n    if (leg === -2) {\r\n      // Past the end of the route\r\n      setLat(route[route.length - 1][1])\r\n      setLong(route[route.length - 1][0])\r\n      setActive(false)\r\n      setSpeed(0)\r\n    } else {\r\n      const leg_dist = new_dist - route[leg][2]\r\n      const new_point = intermediatePoint(\r\n        route[leg][1],\r\n        route[leg][0],\r\n        route[leg + 1][1],\r\n        route[leg + 1][0],\r\n        leg_dist / (route[leg + 1][2] - route[leg][2])\r\n      )\r\n      setLat(new_point[0])\r\n      setLong(new_point[1])\r\n    }\r\n    if (leg !== -2) {\r\n      if (leg >= stages[curStage].leg) {\r\n        // This is the first tick of a new stage\r\n        setCurStage(curStage + 1)\r\n        setStartTick(new_tick)\r\n      }\r\n      const new_stages = [\r\n        ...stages.slice(0, curStage),\r\n        { ...stages[curStage], stage_t: new_tick - startTick },\r\n        ...stages.slice(curStage + 1)\r\n      ]\r\n      setStages(new_stages)\r\n    }\r\n    // Calculate leg direction\r\n    if (leg !== -2 && leg + 1 < route.length) {\r\n      if (route[leg][0] < route[leg + 1][0]) {\r\n        setLegDirection('east')\r\n      } else {\r\n        setLegDirection('west')\r\n      }\r\n    }\r\n  }\r\n\r\n  useInterval(() => {\r\n    if (active === true) {\r\n      nextWalkFrame()\r\n    }\r\n  }, 1000)\r\n\r\n  // Scroll destination list to current route leg on first load only\r\n  useEffect(() => {\r\n    if (document.getElementsByClassName('table_row current_row').length > 0) {\r\n      document\r\n        .getElementsByClassName('table_row current_row')[0]\r\n        .scrollIntoView()\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      if (document.getElementsByClassName('table_row current_row').length > 0) {\r\n        document\r\n          .getElementsByClassName('table_row current_row')[0]\r\n          .scrollIntoView()\r\n      }\r\n    }\r\n    window.addEventListener('resize', handleResize)\r\n  })\r\n\r\n  const formatTime = (seconds) => {\r\n    const hours = Math.floor(seconds / 3600)\r\n    const hour_rem = seconds % 3600\r\n    const mins = Math.floor(hour_rem / 60)\r\n    const secs = hour_rem % 60\r\n    const time_str =\r\n      hours.toString().padStart(2, 0) +\r\n      ':' +\r\n      mins.toString().padStart(2, 0) +\r\n      ':' +\r\n      secs.toString().padStart(2, 0)\r\n    return time_str\r\n  }\r\n\r\n  const formatShortTime = (seconds) => {\r\n    const mins = Math.floor(seconds / 60)\r\n    const secs = seconds % 60\r\n    const time_str =\r\n      mins.toString().padStart(2, 0) + ':' + secs.toString().padStart(2, 0)\r\n    return time_str\r\n  }\r\n\r\n  const formatDistAsMetres = (metres) => {\r\n    return metres.toLocaleString('en') + 'm'\r\n  }\r\n\r\n  const formatPercentage = (percentage) => {\r\n    return (100 * percentage).toFixed(1) + '%'\r\n  }\r\n\r\n  useEffect(() => {\r\n    // eslint-disable-next-line\r\n    const unsubscribe = stat_doc.onSnapshot((snapshot) => {\r\n      if (snapshot.size) {\r\n        const cur_data = snapshot.docs[0].data()\r\n        // Only set active to cur_data.active if less than four minutes have elapsed\r\n        // since last Firestore update - guards against errors due to walk not being\r\n        // stopped on main app - else assume that we are inactive.\r\n        const time_now = firebase.firestore.Timestamp.fromDate(new Date())\r\n        if (time_now - cur_data.timestamp < 240) {\r\n          setActive(cur_data.active)\r\n          if (cur_data.active) {\r\n            setSpeed(cur_data.speed)\r\n          } else {\r\n            setSpeed(0)\r\n          }\r\n        } else {\r\n          setActive(false)\r\n          setSpeed(0)\r\n        }\r\n        setDist(cur_data.dist)\r\n        setTick(cur_data.tick)\r\n        setStartTick(cur_data.start_tick)\r\n        setCurStage(cur_data.cur_stage)\r\n\r\n        // Populate stages data\r\n        let new_stages = []\r\n        new_stages = stages.map((stage, index) => {\r\n          return { ...stage, stage_t: cur_data.stage_times[index] }\r\n        })\r\n        setStages(new_stages)\r\n        // Calculate current position\r\n\r\n        const leg = route.findIndex((element) => element[2] > cur_data.dist) - 1\r\n        if (leg === -2) {\r\n          // Past the end of the route\r\n          setLat(route[route.length - 1][1])\r\n          setLong(route[route.length - 1][0])\r\n          setActive(false)\r\n        } else {\r\n          const leg_dist = cur_data.dist - route[leg][2]\r\n          const new_point = intermediatePoint(\r\n            route[leg][1],\r\n            route[leg][0],\r\n            route[leg + 1][1],\r\n            route[leg + 1][0],\r\n            leg_dist / (route[leg + 1][2] - route[leg][2])\r\n          )\r\n          setLat(new_point[0])\r\n          setLong(new_point[1])\r\n        }\r\n        // Calculate leg direction\r\n        if (leg !== -2 && leg + 1 < route.length) {\r\n          if (route[leg][0] < route[leg + 1][0]) {\r\n            setLegDirection('east')\r\n          } else {\r\n            setLegDirection('west')\r\n          }\r\n        }\r\n        if (initial_load) {\r\n          if (\r\n            document.getElementsByClassName('table_row current_row').length > 0\r\n          ) {\r\n            document\r\n              .getElementsByClassName('table_row current_row')[0]\r\n              .scrollIntoView()\r\n          }\r\n          initial_load = false\r\n        }\r\n      } else {\r\n        console.log('Snapshot has no data')\r\n      }\r\n    })\r\n    // eslint-disable-next-line\r\n  }, [stat_doc])\r\n\r\n  const onMove = (event) => {\r\n    // if (summaryMapRef.current.viewport.center !== undefined){\r\n    summaryMapRef.current.leafletElement.setView(event.target.getCenter(), 11)\r\n    // }\r\n  }\r\n\r\n  return (\r\n    <div id=\"container\">\r\n      <div id=\"map_area\">\r\n        <Map\r\n          id=\"full_map\"\r\n          center={[lat, long]}\r\n          zoom={17}\r\n          dragging={true}\r\n          keyboard={true}\r\n          scrollWheelZoom={true}\r\n          zoomControl={true}\r\n          doubleClickZoom={false}\r\n          onmoveend={onMove.bind(this)}\r\n        >\r\n          {/* <TileLayer\r\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors &bull; <a target=\"_blank\" href=\"https://icons8.com/icons/set/walking\">Walking</a>, <a target=\"_blank\" href=\"https://icons8.com/icons/set/image\">Image</a> icons by <a target=\"_blank\" href=\"https://icons8.com\">Icons8</a>'\r\n          /> */}\r\n          <TileLayer\r\n            url=\"https://{s}.tile.openstreetmap.fr/hot/{z}/{x}/{y}.png\"\r\n            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors &bull; <a target=\"_blank\" href=\"https://icons8.com/icons/set/walking\">Walking</a>, <a target=\"_blank\" href=\"https://icons8.com/icons/set/image\">Image</a> icons by <a target=\"_blank\" href=\"https://icons8.com\">Icons8</a>'\r\n          />\r\n          <GeoJSON data={getGeoJSON()} style={styleRoute} />\r\n          {legDirection === 'east' ? (\r\n            <Marker position={[lat, long]} icon={cyclingEastIcon}></Marker>\r\n          ) : (\r\n            <Marker position={[lat, long]} icon={cyclingWestIcon}></Marker>\r\n          )}\r\n        </Map>\r\n        <div id=\"summary_border\"></div>\r\n        <Map\r\n          id=\"summary_map\"\r\n          ref={summaryMapRef}\r\n          center={[lat, long]}\r\n          zoom={11}\r\n          dragging={false}\r\n          keyboard={false}\r\n          scrollWheelZoom={false}\r\n          zoomControl={false}\r\n          doubleClickZoom={false}\r\n        >\r\n          <TileLayer\r\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n          />\r\n          <GeoJSON data={getGeoJSON()} style={styleRoute} />\r\n          <Circle center={[lat, long]} radius=\"10\" />\r\n        </Map>\r\n      </div>\r\n      <div id=\"summary_area\">\r\n        <div id=\"summary_stats\">\r\n          <h1 className=\"summary_title\">SIFT's Virtual Cycle Ride</h1>\r\n          <div id=\"total_dist\" className=\"summary_row\">\r\n            <div className=\"md_summary\">Distance cycled: </div>\r\n            <div className=\"lg_summary\">\r\n              {formatDistAsMetres(parseInt(dist))} (\r\n              {formatPercentage(parseInt(dist) / full_dist)})\r\n            </div>\r\n          </div>\r\n          <div id=\"total_time\" className=\"summary_row\">\r\n            <div className=\"md_summary\">Cycling time: </div>\r\n            <div className=\"lg_summary\">{formatTime(tick)}</div>\r\n          </div>\r\n          <h2 className=\"sponsor_details\">\r\n            Please{' '}\r\n            <a href=\"https://www.justgiving.com/fundraising/sift-virtual-cycle\">\r\n              find out more and sponsor Graham\r\n            </a>\r\n            !\r\n          </h2>\r\n        </div>\r\n        <div id=\"monitor\">\r\n          <div className=\"table_row header\">\r\n            <div className=\"locn_desc\">Destination</div>\r\n            <div className=\"locn_time\">Time on stage</div>\r\n            <div className=\"locn_dist\">Stage distance</div>\r\n            <div className=\"locn_rem\" style={{ textAlign: 'center' }}>\r\n              Distance left\r\n            </div>\r\n          </div>\r\n          {stages.map((stage, index) => {\r\n            let class_n = 'table_row'\r\n            let stage_r = stage.stage_d\r\n            if (stage.total_d >= dist && dist > stage.total_d - stage.stage_d) {\r\n              if (active === true) {\r\n                class_n = 'table_row current_row active'\r\n              } else {\r\n                class_n = 'table_row current_row inactive'\r\n              }\r\n              stage_r = parseInt(stage.total_d - dist)\r\n            } else if (dist > stage.total_d) {\r\n              stage_r = 0\r\n            }\r\n            return (\r\n              <div key={index} className={`${class_n}`}>\r\n                <div className=\"locn_desc\">{stage.location}</div>\r\n                <div className=\"locn_time\">\r\n                  {formatShortTime(stage.stage_t)}\r\n                </div>\r\n                <div className=\"locn_dist\">\r\n                  {formatDistAsMetres(stage.stage_d)}\r\n                </div>\r\n                <div className=\"locn_rem\">{formatDistAsMetres(stage_r)}</div>\r\n              </div>\r\n            )\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction styleRoute() {\r\n  return {\r\n    color: 'orange'\r\n  }\r\n}\r\n\r\nfunction getGeoJSON() {\r\n  return {\r\n    type: 'FeatureCollection',\r\n    properties: {\r\n      name: 'Virtual Cycle Ride',\r\n      description: 'Generated by AllTrails https://www.alltrails.com/',\r\n      styleUrl: '#gpsiesStyle1'\r\n    },\r\n    features: [\r\n      {\r\n        type: 'Feature',\r\n        geometry: {\r\n          type: 'LineString',\r\n          coordinates: full_route\r\n        }\r\n      }\r\n    ],\r\n    name: 'Virtual Cycle Ride route'\r\n  }\r\n}\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}